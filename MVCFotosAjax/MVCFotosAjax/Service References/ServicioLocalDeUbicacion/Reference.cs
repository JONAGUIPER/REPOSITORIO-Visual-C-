//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVCFotosAjax.ServicioLocalDeUbicacion {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServicioLocalDeUbicacion.ILocationCheckerService")]
    public interface ILocationCheckerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationCheckerService/GetLocation", ReplyAction="http://tempuri.org/ILocationCheckerService/GetLocationResponse")]
        string GetLocation(string address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationCheckerService/GetLocation", ReplyAction="http://tempuri.org/ILocationCheckerService/GetLocationResponse")]
        System.Threading.Tasks.Task<string> GetLocationAsync(string address);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILocationCheckerServiceChannel : MVCFotosAjax.ServicioLocalDeUbicacion.ILocationCheckerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LocationCheckerServiceClient : System.ServiceModel.ClientBase<MVCFotosAjax.ServicioLocalDeUbicacion.ILocationCheckerService>, MVCFotosAjax.ServicioLocalDeUbicacion.ILocationCheckerService {
        
        public LocationCheckerServiceClient() {
        }
        
        public LocationCheckerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LocationCheckerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LocationCheckerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LocationCheckerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetLocation(string address) {
            return base.Channel.GetLocation(address);
        }
        
        public System.Threading.Tasks.Task<string> GetLocationAsync(string address) {
            return base.Channel.GetLocationAsync(address);
        }
    }
}
